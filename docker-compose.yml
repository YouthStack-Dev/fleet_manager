version: '3.8'

services:

  redis_server:
    image: redis:7.4-alpine
    container_name: redis_server
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispassword --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - fleet-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  postgres:
    container_name: fleet_postgres
    image: postgres:15
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: fleetadmin
      POSTGRES_PASSWORD: fleetpass
      POSTGRES_DB: fleet_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - fleet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fleetadmin -d fleet_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  fleet_api:
    container_name: fleet_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=fleet_postgres
      - POSTGRES_USER=fleetadmin
      - POSTGRES_PASSWORD=fleetpass
      - POSTGRES_DB=fleet_db
      - PORT=5432
      - DATABASE_URL=postgresql://fleetadmin:fleetpass@fleet_postgres:5432/fleet_db
      - OAUTH2_URL=http://localhost:8000/api/v1/auth/introspect
      - REDIS_HOST=redis_server
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=redispassword
      - USE_REDIS=1
      - TOKEN_EXPIRY_HOURS=1
      - X_INTROSPECT_SECRET=Kjs#idjXw
    volumes:
      # - ./firebase_key.json:/app/secrets/firebase_key.json
      - /var/lib/fleet/uploads:/app/uploaded_files
      - redis_data:/app/redis_data
      - .:/app
    depends_on:
      redis_server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - fleet-network

networks:
  fleet-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
