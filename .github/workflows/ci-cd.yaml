name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: fleet-manager
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      
    - name: Set up kubeconfig
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
        
    - name: Deploy to Kubernetes
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        
        # Replace placeholders in deployment files
        sed -i "s|\${DOCKER_REGISTRY}|$DOCKER_REGISTRY|g" kubernetes/fleet-manager-deployment.yaml
        sed -i "s|\${IMAGE_TAG}|$IMAGE_TAG|g" kubernetes/fleet-manager-deployment.yaml
        
        # Apply Kubernetes manifests using kustomize
        kubectl apply -k kubernetes/
        
        # Wait for deployment to complete
        kubectl rollout status deployment/fleet-manager
